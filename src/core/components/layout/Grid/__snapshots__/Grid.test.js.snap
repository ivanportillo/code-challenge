exports[`Grid should render a grid 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="Grid">
    <div
        className="Row"
        style={
            Object {
                "marginBottom": 2,
              }
        }>
        <Column
            columnWidth={33.333333333333336}
            gutter={2}>
            <div>
                Element 1
            </div>
        </Column>
        <Column
            columnWidth={33.333333333333336}
            gutter={2}>
            <div>
                Element 2
            </div>
        </Column>
        <Column
            columnWidth={33.333333333333336}
            gutter={2}>
            <div>
                Element 3
            </div>
        </Column>
    </div>
    <div
        className="Row"
        style={
            Object {
                "marginBottom": 2,
              }
        }>
        <Column
            columnWidth={33.333333333333336}
            gutter={2}>
            <div>
                Element 1
            </div>
        </Column>
        <Column
            columnWidth={33.333333333333336}
            gutter={2}>
            <div>
                Element 2
            </div>
        </Column>
        <Column
            columnWidth={33.333333333333336}
            gutter={2}>
            <div>
                Element 3
            </div>
        </Column>
    </div>
</div>,
  "nodes": Array [
    <div
      className="Grid">
      <div
            className="Row"
            style={
                  Object {
                        "marginBottom": 2,
                      }
            }>
            <Column
                  columnWidth={33.333333333333336}
                  gutter={2}>
                  <div>
                        Element 1
                  </div>
            </Column>
            <Column
                  columnWidth={33.333333333333336}
                  gutter={2}>
                  <div>
                        Element 2
                  </div>
            </Column>
            <Column
                  columnWidth={33.333333333333336}
                  gutter={2}>
                  <div>
                        Element 3
                  </div>
            </Column>
      </div>
      <div
            className="Row"
            style={
                  Object {
                        "marginBottom": 2,
                      }
            }>
            <Column
                  columnWidth={33.333333333333336}
                  gutter={2}>
                  <div>
                        Element 1
                  </div>
            </Column>
            <Column
                  columnWidth={33.333333333333336}
                  gutter={2}>
                  <div>
                        Element 2
                  </div>
            </Column>
            <Column
                  columnWidth={33.333333333333336}
                  gutter={2}>
                  <div>
                        Element 3
                  </div>
            </Column>
      </div>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <Grid
        columns={3}
        gutter={2}
        spaceBetween={2}>
        <div>
                Element 1
        </div>
        <div>
                Element 2
        </div>
        <div>
                Element 3
        </div>
        <div>
                Element 1
        </div>
        <div>
                Element 2
        </div>
        <div>
                Element 3
        </div>
</Grid>,
      "_debugID": 23,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "children": Array [
            <div>
              Element 1
</div>,
            <div>
              Element 2
</div>,
            <div>
              Element 3
</div>,
            <div>
              Element 1
</div>,
            <div>
              Element 2
</div>,
            <div>
              Element 3
</div>,
          ],
          "columns": 3,
          "gutter": 2,
          "spaceBetween": 2,
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="Grid">
          <div
                    className="Row"
                    style={
                              Object {
                                        "marginBottom": 2,
                                      }
                    }>
                    <Column
                              columnWidth={33.333333333333336}
                              gutter={2}>
                              <div>
                                        Element 1
                              </div>
                    </Column>
                    <Column
                              columnWidth={33.333333333333336}
                              gutter={2}>
                              <div>
                                        Element 2
                              </div>
                    </Column>
                    <Column
                              columnWidth={33.333333333333336}
                              gutter={2}>
                              <div>
                                        Element 3
                              </div>
                    </Column>
          </div>
          <div
                    className="Row"
                    style={
                              Object {
                                        "marginBottom": 2,
                                      }
                    }>
                    <Column
                              columnWidth={33.333333333333336}
                              gutter={2}>
                              <div>
                                        Element 1
                              </div>
                    </Column>
                    <Column
                              columnWidth={33.333333333333336}
                              gutter={2}>
                              <div>
                                        Element 2
                              </div>
                    </Column>
                    <Column
                              columnWidth={33.333333333333336}
                              gutter={2}>
                              <div>
                                        Element 3
                              </div>
                    </Column>
          </div>
</div>,
        "_debugID": 24,
        "_renderedOutput": <div
          className="Grid">
          <div
                    className="Row"
                    style={
                              Object {
                                        "marginBottom": 2,
                                      }
                    }>
                    <Column
                              columnWidth={33.333333333333336}
                              gutter={2}>
                              <div>
                                        Element 1
                              </div>
                    </Column>
                    <Column
                              columnWidth={33.333333333333336}
                              gutter={2}>
                              <div>
                                        Element 2
                              </div>
                    </Column>
                    <Column
                              columnWidth={33.333333333333336}
                              gutter={2}>
                              <div>
                                        Element 3
                              </div>
                    </Column>
          </div>
          <div
                    className="Row"
                    style={
                              Object {
                                        "marginBottom": 2,
                                      }
                    }>
                    <Column
                              columnWidth={33.333333333333336}
                              gutter={2}>
                              <div>
                                        Element 1
                              </div>
                    </Column>
                    <Column
                              columnWidth={33.333333333333336}
                              gutter={2}>
                              <div>
                                        Element 2
                              </div>
                    </Column>
                    <Column
                              columnWidth={33.333333333333336}
                              gutter={2}>
                              <div>
                                        Element 3
                              </div>
                    </Column>
          </div>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Grid
    columns={3}
    gutter={2}
    spaceBetween={2}>
    <div>
        Element 1
    </div>
    <div>
        Element 2
    </div>
    <div>
        Element 3
    </div>
    <div>
        Element 1
    </div>
    <div>
        Element 2
    </div>
    <div>
        Element 3
    </div>
</Grid>,
}
`;
